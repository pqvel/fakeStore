{"version":3,"sources":["components/header/Header.js","myHooks/useHttpHook.js","components/productListItem/rating/Rating.js","components/productListItem/ProductListItem.js","_actions/index.js","components/productList/ProductList.js","components/pages/mainPage/MainPage.js","components/pages/singleProductPage/SingleProductPage.js","components/pages/favouritePage.js/FavouritePage.js","components/productInput/productInput.js","components/cartListItem/CartListItem.js","components/cartList/EmptyCartList.js","components/cartList/CartList.js","components/cartSidebar/CartSidebar.js","components/pages/cartPage/CartPage.js","components/app/App.js","_reducers/reducer.js","_store/store.js","serviceWorker.js","index.js"],"names":["Header","className","to","isActive","useHttpHook","useState","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","Rating","value","ratingWidth","setRatingWidth","useEffect","activeRatingWidth","changeRating","style","width","type","name","ProductListItem","id","title","image","price","descr","rate","src","alt","length","newTitle","slice","shortTitle","addProductsToCart","products","console","log","payload","ProductList","dispatch","useDispatch","useSelector","state","disable","setDisable","loadItems","itemsCount","then","res","transformResponse","fetchedProducts","catch","err","items","map","item","description","rating","uuidv4","disabled","onClick","e","MainPage","View","product","onAddToCart","category","SingleProductPage","cartProducts","productId","useParams","setProduct","getProduct","getProductFromState","Promise","resolve","reject","find","getProductFromAPI","any","error","productIndex","findIndex","productWithCount","count","newCartProducts","i","FavouritePage","ProductInput","onCalcInputValue","min","max","readOnly","memo","prevProps","nextProps","CartListItem","onDelete","EmptyCartList","CartList","emptyCartProducts","deleteProduct","CartSidebar","promoArr","totalPrice","setTotalPrice","totalProducts","setProductsCount","promoValue","setPromoValue","promo","setPromo","priceProducts","reduce","total","Math","ceil","productsCount","placeholder","onChange","event","target","forEach","promoCode","onPromo","CartPage","App","path","element","initialState","favouriteProducts","loadingStatus","reducer","action","newCartList","filter","index","arr","k","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa9fc066.chunk.js","sourcesContent":["\r\nimport {\r\n    Link,\r\n    NavLink\r\n} from 'react-router-dom'\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n    \r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='header__container'>\r\n                <div className='header__logo'>\r\n                    <Link className='header__logo-link'\r\n                        to='/'>FakeStore</Link>\r\n                </div>\r\n\r\n                <ul className='header__menu-list'>\r\n                    <li className='header__list-item'>\r\n                        <NavLink className={isActive =>\r\n                                    \"header__link header__link--heart\" + (!isActive ? \" header__link--active\" : \"\")\r\n                                 }\r\n                                 to='/favourite'>Favourite</NavLink>\r\n                        <span></span>\r\n                    </li>\r\n                    <li className='header__list-item'>\r\n                        <NavLink className={isActive => \r\n                                    'header__link header__link--cart' + (!isActive ? ' header__link--active' : '')\r\n                                 }\r\n                                 to='/cart'>Cart</NavLink>\r\n                        <span></span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttpHook = () => {\r\n    const [process, setProcess] = useState('idle');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    });\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, \r\n            // clearError, \r\n            // process, \r\n            // setProcess\r\n        }\r\n}","import { useEffect, useState } from 'react';\r\nimport './rating.scss';\r\n\r\nconst Rating = ({value}) => {\r\n    const [ratingWidth, setRatingWidth] = useState(0)\r\n    \r\n    const changeRating = () => {\r\n        const activeRatingWidth = value / 0.05;\r\n        setRatingWidth(ratingWidth => activeRatingWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeRating();\r\n    }, [value])\r\n    return (\r\n        <div className='rating'>\r\n            <div className='rating__body'>\r\n                <div className='rating__active' style={{width: `${ratingWidth}%`}}></div>\r\n                <div className='rating__items'>\r\n                    <input className='rating__item' type='radio' value='1' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='2' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='3' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='4' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='5' name='rating'></input>\r\n                </div>\r\n            </div>\r\n            <div className='rating__value'>{value}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './productListItem.scss';\r\nimport Rating from './rating/Rating'\r\n\r\nconst ProductListItem = ({id, title, image, descr, price, rate}) => {\r\n    \r\n    const shortTitle = (title) => {\r\n        if (title.length > 20) {\r\n            const newTitle = title.slice(0, 20) + '...'\r\n            if (newTitle[19] === ' ') {\r\n                return newTitle.slice(0,19) + '...'\r\n            }\r\n            return newTitle;\r\n        }\r\n        return title\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <Link to={`/product/${id}`} className='product'>\r\n                <div className='product__img-block'>\r\n                    <img className='product__img' src={image} alt={title}/>\r\n                    <div className='product__rate'>\r\n                        <Rating value={rate}></Rating>\r\n                    </div>\r\n                </div>\r\n                <span className='product__title'>{shortTitle(title)}</span>\r\n                <span className='product__descr'></span>\r\n                <span className='product__price'>{price} $</span>\r\n                <div className='product__buttons'>\r\n                    <button className='product__button product__button-favourite'></button>\r\n                    <button className='product__button product__button-cart'></button>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ProductListItem;\r\n\r\n","\r\n\r\n\r\n\r\nexport const fetchingProducts = () => {\r\n    return {\r\n        type: 'FETCHING__PRODUCTS'\r\n    }\r\n}\r\n\r\nexport const fetchedProducts = (products) => {\r\n    return {\r\n        type: 'FETCHED__PRODUCTS',\r\n        payload: products\r\n    }\r\n}\r\n\r\nexport const fetchingProductsError = () => {\r\n    return {\r\n        type: 'FETCHING__PRODUCTS__ERROR'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// cartList\r\n\r\nexport const deleteProduct = (id) => {\r\n    return {\r\n        type: 'DELETE_PRODUCT_FROM_CART',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const addProductsToCart = (products) => {\r\n    console.log(products)\r\n    return {\r\n        type: 'ADD_PRODUCTS_TO_CART',\r\n        payload: products\r\n    }\r\n} \r\n\r\nexport const changeCountProduct = (obj) => {\r\n    return {\r\n        type: 'CHANGE_PRODUCT_COUNT',\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\nexport const deleteAllProducts = () => {\r\n    return {\r\n        type: 'DELETE_ALL_PRODUCTS_FROM_CART'\r\n    }\r\n}","import './productList.scss'\r\nimport {useHttpHook} from '../../myHooks/useHttpHook'\r\nimport ProductListItem from '../productListItem/ProductListItem'\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { fetchedProducts, fetchingProductsError } from '../../_actions';\r\nconst ProductList = () => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector((state) => state.products);\r\n    const [disable, setDisable] = useState(false);\r\n    const {request} = useHttpHook();\r\n    \r\n    useEffect(() => {\r\n\r\n        loadItems();\r\n\r\n    }, [])\r\n\r\n    const loadItems = () => {\r\n        const itemsCount = products.length === 0 ? 8 : 4;\r\n        // API dosn't have method fot getting range products\r\n            \r\n        request(`https://fakestoreapi.com/products?limit=${ products.length + itemsCount }`)\r\n        .then(res => {\r\n            if (res.length === 20) {\r\n                setDisable(disable => true);\r\n            }\r\n\r\n            res = transformResponse(res);\r\n\r\n            dispatch(fetchedProducts(res))\r\n        })\r\n        .catch(err => dispatch(fetchingProductsError()))\r\n    }\r\n\r\n    const transformResponse = (res) => {\r\n        return res.slice(products.length, res.length);\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        // if (arr === 'undefined') return null;\r\n        return arr.map(item => {\r\n            return (\r\n                <ProductListItem key={uuidv4()}\r\n                                 id={item.id}\r\n                                 title={item.title}\r\n                                 image={item.image}\r\n                                 descr={item.description}\r\n                                 price={item.price}\r\n                                 rate={item.rating.rate}></ProductListItem>\r\n            )\r\n        })\r\n    }\r\n    const items = renderItems(products)\r\n    return (\r\n        <>\r\n            <ul className='product-list'>\r\n                {items}\r\n            </ul>\r\n            <button disabled={disable}\r\n                    className={!disable ? 'product-list__button' : \r\n                                          'product-list__button product-list__button--disable'}\r\n                    onClick={(e) => loadItems(e)}>Загрузить больше товаров</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductList;","import ProductList from \"../../productList/ProductList\";\r\nimport './mainPage.scss';\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            <div className=\"main-page__container\">\r\n                <ProductList></ProductList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useHttpHook} from '../../../myHooks/useHttpHook'\r\nimport { addProductsToCart } from \"../../../_actions\";\r\nimport Rating from \"../../productListItem/rating/Rating\"\r\nimport './singleProductPage.scss';\r\nconst SingleProductPage = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    const products = useSelector(state => state.products)\r\n    const cartProducts = useSelector(state => state.cartProducts)\r\n    const { productId } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n\r\n\r\n    const { request } = useHttpHook();\r\n    \r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [])\r\n    \r\n    const getProduct = () => {\r\n        \r\n        const getProductFromState = new Promise((resolve, reject) => {\r\n            const product = products.find(item => item.id == productId);\r\n            if (product == 'undefined' || product == null) {\r\n                reject(\"product dosn't exist in store\");\r\n                console.log(product)\r\n            } else {\r\n                resolve(product)\r\n            }\r\n        })\r\n\r\n        const getProductFromAPI = new Promise((resolve) => {\r\n            request(`https://fakestoreapi.com/products/${productId}`)\r\n                .then(product => resolve(product))\r\n                .catch(err => console.log(err))\r\n        })\r\n\r\n        Promise.any([getProductFromState, getProductFromAPI])\r\n            .then(value => setProduct(product => value))\r\n            .catch(error => console.log(error));    \r\n    }\r\n\r\n    const onAddToCart = (product) => {\r\n        const productIndex = cartProducts.findIndex(item => item.id === product.id);\r\n        console.log(`product index: ${productIndex}`)\r\n    \r\n        if (productIndex === -1) {\r\n            console.log('render 1')\r\n\r\n            const productWithCount = {\r\n                ...product,\r\n                count: 1\r\n            }\r\n\r\n            const newCartProducts = [\r\n                ...cartProducts, \r\n                productWithCount\r\n            ];\r\n\r\n            dispatch(addProductsToCart(newCartProducts))\r\n        } else {\r\n            console.log('render 2')\r\n\r\n            const newCartProducts = cartProducts.map((item,i) => {\r\n                if (i === productIndex) {\r\n                    return {\r\n                        ...item,\r\n                        count: item.count + 1\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n\r\n            dispatch(addProductsToCart(newCartProducts))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {product ? <View product={product} onAddToCart={onAddToCart}/> : 'загрука'}\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst View = ({product, onAddToCart}) => {\r\n    const {image, rating, title, description, price, category} = product;\r\n    return (\r\n        <div className='product-page'>\r\n            <div className='product-page__container'>\r\n                <div className='product-page__img-block'>\r\n                    <img className='product-page__img' src={image} alt=\"ffrfrg\"></img>\r\n                </div>\r\n\r\n                <div className='product-page__content'>\r\n                    <div className='product-page__rate'>\r\n                        <Rating value={rating.rate}></Rating>\r\n                    </div>\r\n                    <h4 className='product-page__title'>{title}</h4>\r\n                    <span className='product-page__price'>{price} $</span>\r\n                    <p className='product-page__descr'>{description}</p>\r\n                    <span className='product-page__category'>category: <span>{category}</span></span>\r\n                    <div className='btns-block'>\r\n                        <button className='btn'\r\n                                onClick={() => onAddToCart(product)}>Add to cart</button>\r\n                        <button className='btn'>Add to favourite</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SingleProductPage\r\n","\r\n\r\nconst FavouritePage = () => {\r\n\r\n\r\n    return (\r\n        <span>FAVOURITE PAGE</span>\r\n    )\r\n}\r\n\r\nexport default FavouritePage","\r\nimport './productInput.scss';\r\n\r\nimport { memo } from \"react\";\r\n\r\nconst ProductInput = ({count, onCalcInputValue}) => {\r\n    \r\n    return (\r\n        <div className=\"product-input\">\r\n            <input className=\"product-input__input\"\r\n                   type=\"number\"\r\n                   min=\"0\"\r\n                   max=\"100\"\r\n                   readOnly\r\n                   value={count}/>\r\n            <b className=\"product-input__plus\"\r\n                onClick={() => onCalcInputValue(1)}>\r\n                    <i className=\"product-input__plus-item-1\"></i>\r\n                    <i className=\"product-input__plus-item-2\"></i>\r\n            </b>\r\n            <b className=\"product-input__minus\"\r\n                onClick={() => onCalcInputValue(-1)}>\r\n                    <i className=\"product-input__minus-item-1\"></i>\r\n            </b> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ProductInput, (prevProps, nextProps) => prevProps.count === nextProps.count);","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { changeCountProduct } from \"../../_actions\";\r\n\r\nimport ProductInput from \"../productInput/productInput\"\r\n\r\nconst CartListItem = ({title, price, id, onDelete}) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const count = useSelector((state) => {\r\n        const product = state.cartProducts.find(item => item.id === id);\r\n        return product.count;\r\n    })\r\n\r\n     const onCalcInputValue = useCallback((value) => {\r\n        if (value === -1 && count === 0) return;\r\n        if (value === 1 && count === 100) return;\r\n        dispatch(changeCountProduct({id, count: count + value}))\r\n    })\r\n\r\n    return (\r\n        <tr className={count !== 0 ? \"cart__table-row\" : \"cart__table-row cart__table-row--empty\"}>\r\n            <td className=\"cart__table-column\">{title}</td>\r\n            <td className=\"cart__table-column\">{price} $</td>\r\n            <td className=\"cart__table-column\">\r\n                <div className='cart__table-input-block'>\r\n                   <ProductInput onCalcInputValue={onCalcInputValue} count={count} id={id}/> \r\n                </div>\r\n            </td>\r\n            <td className=\"cart__table-column\">\r\n                <button className=\"cart__table-button-delete\"\r\n                        onClick={() => onDelete(id)}/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CartListItem","import { memo } from \"react\"\r\n\r\n\r\nconst EmptyCartList = () => {\r\n    \r\n    return (\r\n        <tr className=\"cart__table--empty\">\r\n            <td>Your cart is empty. Please select a product to buy</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default memo(EmptyCartList);","\r\nimport { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { deleteProduct } from \"../../_actions\";\r\nimport CartListItem from '../cartListItem/CartListItem';\r\nimport EmptyCartList from \"./EmptyCartList\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst CartList = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const cartProducts = useSelector(state => state.cartProducts);\r\n\r\n    const emptyCartProducts = cartProducts.length === 0; \r\n\r\n    const onDelete = useCallback((id) => {\r\n        dispatch(deleteProduct(id))\r\n        console.log('hello')\r\n    }, [])\r\n\r\n    return (\r\n        <table className=\"cart__table\">\r\n                <thead className=\"cart__table-head\">\r\n                    <tr className=\"cart__table-row\">\r\n                        <td className=\"cart__table-column\">Name:</td>\r\n                        <td className=\"cart__table-column\">Price:</td>\r\n                        <td className=\"cart__table-column\">Amount:</td>\r\n                        <td className=\"cart__table-column\"></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className='cart__table-body'>\r\n                    {\r\n                        cartProducts.map(({title, count, price, id}) => {\r\n                            return (\r\n                                <CartListItem onDelete={onDelete}\r\n                                              title={title}\r\n                                              count={count}\r\n                                              price={price}\r\n                                              id={id}\r\n                                              key={uuidv4()}/>        \r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        emptyCartProducts ? <EmptyCartList/> : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    )\r\n}\r\n\r\nexport default CartList","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { deleteAllProducts } from \"../../_actions\";\r\n\r\n\r\nconst CartSidebar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cartProducts = useSelector(state => state.cartProducts);\r\n    const promoArr = useSelector(state => state.promoArr);\r\n\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalProducts, setProductsCount] = useState(0)\r\n\r\n    const [promoValue, setPromoValue] = useState('')\r\n    const [promo, setPromo] = useState(1);\r\n    \r\n    const [disable, setDisable] = useState(false)\r\n\r\n    // state manager\r\n\r\n    useEffect(() => {\r\n        const priceProducts = cartProducts.reduce((total, item) => {\r\n            const {price, count} = item;\r\n           return total + price * count\r\n        }, 0);\r\n\r\n        setTotalPrice(totalPrice => Math.ceil(priceProducts * promo * 100) / 100);\r\n    }, [cartProducts, promo])\r\n\r\n    useEffect(() => {\r\n        const productsCount = cartProducts.reduce((total, item) => {\r\n            const {count} = item;\r\n            return total + count;\r\n        }, 0);\r\n\r\n        setProductsCount(totalProducts => productsCount)\r\n    }, [cartProducts])\r\n\r\n    useEffect(() => {\r\n        if (cartProducts.length === 0) {\r\n            setDisable(true)\r\n        }\r\n        if (disable === false && cartProducts.length > 0)  {\r\n            setDisable(false)\r\n        }\r\n    }, [cartProducts])\r\n\r\n    const onPromo = (event) => {\r\n        const value = event.target.value;\r\n        setPromoValue(promoValue => value);\r\n\r\n        promoArr.forEach(promoCode => {\r\n            if (value === promoCode) {\r\n                setPromo(promo => 0.9)\r\n            } else {\r\n                setPromo(promo => 1)\r\n            }\r\n        })\r\n    }\r\n\r\n    const createOrder = () => {\r\n        if (cartProducts.length === 0) return;\r\n        dispatch(deleteAllProducts());\r\n        setPromoValue(promoValue => '')\r\n    }\r\n\r\n    return (\r\n            <div className=\"cart__sidebar\">\r\n                <h4 className=\"cart__sidebar-title\">Total:</h4>\r\n                <span className=\"cart__sidebar-total\">Price: {totalPrice} $</span>\r\n                <span className=\"cart__sidebar-total\">Total goods: {totalProducts}</span>\r\n                <input className=\"cart__sidebar-input\" \r\n                       placeholder=\"Promo code\"\r\n                       value={promoValue}\r\n                       onChange={(event) => onPromo(event)}/>\r\n                <button onClick={() => createOrder()}\r\n                        disabled={disable}\r\n                        className={!disable ? 'cart__sidebar-button' : \r\n                                              'cart__sidebar-button cart__sidebar-button--disable'}>Checkout</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CartSidebar;","\r\nimport CartList from \"../../cartList/CartList\"\r\nimport CartSidebar from \"../../cartSidebar/CartSidebar\"\r\nimport './cartPage.scss'\r\n\r\nconst CartPage = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <CartList/>\r\n            <CartSidebar/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage","import Spinner from \"../spinner/Spinner\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../header/Header\";\r\n// import ProductList from '../productsList/ProductsList';\r\n\r\nimport MainPage from \"../pages/mainPage/MainPage\";\r\nimport SingleProductPage from \"../pages/singleProductPage/SingleProductPage\";\r\nimport FavouritePage from \"../pages/favouritePage.js/FavouritePage\";\r\nimport CartPage from \"../pages/cartPage/CartPage\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                    <Header></Header>\r\n                    <main className=\"main\">\r\n                        <Routes>\r\n                            <Route path='/favourite' element={<FavouritePage/>} />\r\n\r\n                            <Route path='/cart' element={<CartPage/>} />\r\n                                \r\n                            <Route path='/product/:productId' element={<SingleProductPage/>} />\r\n                                \r\n                            <Route path='/' element={<MainPage/>} />\r\n\r\n                        </Routes>\r\n                    </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","const initialState = {\r\n    products: [],\r\n    cartProducts: [],\r\n    favouriteProducts: [],\r\n    loadingStatus: 'idle',\r\n    promoArr: ['123_ddd', 'hello_worls', 'oleg']\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCHING__PRODUCTS':\r\n            return {\r\n                ...state,\r\n                loadingStatus: 'loading'\r\n            }\r\n        case 'FETCHED__PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: [...state.products ,...action.payload],\r\n                loadingStatus: 'idle'\r\n            }\r\n        case 'FETCHING__PRODUCTS__ERROR':\r\n            return {\r\n                ...state,\r\n                loadingStatus: 'error'\r\n            }\r\n        case 'DELETE_PRODUCT_FROM_CART':\r\n            const {cartProducts} = state;\r\n            const newCartList = cartProducts.filter(item => {\r\n                return item.id !== action.payload\r\n            })\r\n            return {\r\n                ...state,\r\n                cartProducts: newCartList \r\n            }\r\n        case 'ADD_PRODUCTS_TO_CART':\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                cartProducts: [...action.payload]\r\n            }\r\n        case 'CHANGE_PRODUCT_COUNT':\r\n            const index = state.cartProducts.findIndex(product => {\r\n                return product.id === action.payload.id\r\n            })\r\n            const arr = state.cartProducts.map((item, k) => {\r\n                return k !== index ? item : {\r\n                    ...item,\r\n                    count: action.payload.count\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                cartProducts: arr\r\n            }\r\n        case 'DELETE_ALL_PRODUCTS_FROM_CART':\r\n            return {\r\n                ...state,\r\n                cartProducts: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport reducer from '../_reducers/reducer'\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(),\r\n    devTools: process.env.NODE_ENV !== 'production', \r\n})\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport store from './_store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}