{"version":3,"sources":["components/header/HeaderCartTotal.js","components/header/HeaderFavouriteTotal.js","assets/heart.svg","assets/cart.svg","components/header/Header.js","services/useProductService.js","hooks/useHttpHook.js","components/rating/Rating.js","components/productListItem/ToggleFavouriteButton.js","slices/productsSlice.js","slices/cartProductsSlice.js","components/productListItem/ProductListItem.js","components/spinner/Spinner.js","assets/error.jpg","components/errorMessage/ErrorMessage.js","components/filterItems/FilterItems.js","components/productList/ProductList.js","assets/search.svg","components/searchProducts/SearchProducts.js","components/pages/mainPage/MainPage.js","components/pages/singleProductPage/SingleProductPage.js","assets/empty-box.jpg","components/favouriteList/EmptyFavouriteList.js","components/favouriteList/FavouriteList.js","components/pages/favouritePage.js/FavouritePage.js","components/productInput/productInput.js","components/cartListItem/CartListItem.js","components/cartList/EmptyCartList.js","components/cartList/CartList.js","components/cartSidebar/CartSidebar.js","components/pages/cartPage/CartPage.js","assets/error404.png","components/pages/page404/Page404.js","components/app/App.js","store/store.js","serviceWorker.js","index.js"],"names":["HeaderCartTotal","cartProducts","useSelector","state","useState","productsCount","setProductsCount","useEffect","totalCount","reduce","total","item","count","className","readOnly","value","type","HeaderFavouriteTotal","products","forEach","favourite","Header","props","to","children","isActive","src","favouriteImg","alt","cartImg","useProductService","_apiBase","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","useHttpHook","getProducts","itemsCount","length","_addFavouriteProperty","getSingleProduct","id","product","res","Array","isArray","slice","map","Rating","ratingWidth","setRatingWidth","activeRatingWidth","changeRating","style","width","name","memo","ToggleFavouriteButton","onToggleFavourite","buttonClass","find","onClick","event","xmlns","height","viewBox","d","fetchProducts","createAsyncThunk","productsSlice","createSlice","initialState","filterValue","loadingStatus","reducers","toggleFavouriteProduct","action","payload","filterProducts","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","reducer","actions","cartProductsSlice","promoArr","addProductToCart","prepare","deleteProductFromCart","filter","deleteAllProductsFromCart","changeProductCount","ProductListItem","title","price","image","rating","dispatch","useDispatch","useCallback","preventDefault","rate","text","maxLength","newTitle","validateText","cartItem","onAddToCart","Spinner","myClass","ErrorMessage","errorJpg","FilterItems","items","React","Children","child","toLowerCase","indexOf","console","log","ProductList","disabled","setDisabled","loadItems","useMemo","renderItems","SearchProducts","setValue","onChangeFilterValue","onChange","target","onKeyPress","ketCode","key","onEnter","placeholder","searchImg","MainPage","View","description","category","SingleProductPage","productId","useParams","setProduct","loadProduct","getProductFromState","Promise","resolve","reject","undefined","getProductFromAPI","then","catch","error","any","EmptyFavouriteList","boxJpg","FavouriteList","FavouritePage","ProductInput","onCalcInputValue","min","max","prevProps","nextProps","CartListItem","onDelete","EmptyCartList","CartList","emptyCartProducts","uuidv4","CartSidebar","totalPrice","setTotalPrice","totalProducts","promoValue","setPromoValue","promo","setPromo","productsPrice","Math","ceil","promoCode","onPromo","CartPage","Page404","error404Img","App","path","element","store","configureStore","middleware","getDefaultMiddleware","devTools","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"igBA2BeA,EAxBS,WAEpB,IAAMC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAaA,gBAC7D,EAA0CG,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAaP,EAAaQ,QAAO,SAACC,EAAOC,GAE3C,OAAOD,EADSC,EAATC,QAER,GAEHN,GAAiB,SAAAD,GAAa,OAAIG,OACnC,CAACP,IAEkB,IAAlBI,EAA4B,KAG5B,uBAAOQ,UAAU,sBACVC,UAAQ,EACRC,MAAOV,EAAgB,IAAMA,EAAgB,MAC7CW,KAAK,UCKLC,EAzBc,WAEzB,IAAMC,EAAWhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASA,YACrD,EAA0Cd,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,qBAAU,WACN,IAAIK,EAAQ,EACZM,EAASC,SAAQ,SAAAR,IACU,IAAnBA,EAAKS,WACLR,OAGRN,GAAiB,SAAAD,GAAa,OAAKO,OACpC,CAACM,IAEkB,IAAlBb,EAA4B,KAG5B,uBAAOQ,UAAU,sBACVC,UAAQ,EACRC,MAAOV,EAAgB,IAAMA,EAAgB,MAC7CW,KAAK,UCxBL,MAA0B,kCCA1B,MAA0B,iCC0D1BK,EAxCA,SAACC,GAEZ,OACI,qBAAKT,UAAU,SAAf,SACI,sBAAKA,UAAU,oBAAf,UAEI,qBAAKA,UAAU,eAAf,SACI,cAAC,IAAD,CAAMA,UAAU,oBACZU,GAAG,IADP,yBAIAD,EAAME,SAEV,qBAAIX,UAAU,oBAAd,UACI,qBAAIA,UAAU,oBAAd,UACI,cAAC,IAAD,CAASA,UAAW,SAAAY,GAAQ,MAChB,gBAAmBA,EAAqC,GAA1B,0BAEjCF,GAAG,aAHZ,SAIa,qBAAKG,IAAKC,EAAcC,IAAI,gBAEzC,cAAC,EAAD,OAEJ,qBAAIf,UAAU,oBAAd,UACI,cAAC,IAAD,CAASA,UAAW,SAAAY,GAAQ,MAChB,gBAAmBA,EAAqC,GAA1B,0BAEjCF,GAAG,QAHZ,SAIa,qBAAKG,IAAKG,EAASD,IAAI,WAEpC,cAAC,EAAD,gB,gCC7CXE,EAAoB,WAC7B,IAAMC,EAAW,2BAEXb,EAAWhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASA,YAErD,ECPuB,WAEvB,IAAMc,EAAO,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAEeC,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAFzC,WAEFE,EAFE,QAGMC,GAHN,sBAIE,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAJxD,wBAOWH,EAASI,OAPpB,eAOFC,EAPE,yBASDA,GATC,uGAAH,sDAgBb,MAAO,CACHZ,WDZca,GAAXb,EAAP,EAAOA,QAEDc,EAAW,uCAAG,8BAAAZ,EAAA,6DACVa,EAAiC,IAApB7B,EAAS8B,OAAe,EAAI,EAD/B,SAEOhB,EAAQ,GAAD,OAAID,EAAJ,2BAA+Bb,EAAS8B,OAASD,IAF/D,cAEVR,EAFU,yBAGTU,EAAsBV,IAHb,2CAAH,qDAMXW,EAAgB,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,sEACCF,EAAQ,GAAD,OAAID,EAAJ,qBAAyBoB,IADjC,cACfC,EADe,yBAGbH,EAAsBG,IAHT,2CAAH,sDAMhBH,EAAwB,SAACI,GAC3B,OAAIC,MAAMC,QAAQF,GACMA,EAAIG,MAAMtC,EAAS8B,OAAQK,EAAIL,QACTS,KAAI,SAAAL,GAE1C,OADAA,EAAQhC,WAAY,EACbgC,MAKXC,EAAIjC,WAAY,EACTiC,IAIf,MAAO,CACHP,cACAI,qBEpCFQ,G,YAAS,SAAC,GAAa,IAAZ3C,EAAW,EAAXA,MACb,EAAsCX,mBAAS,GAA/C,mBAAOuD,EAAP,KAAoBC,EAApB,KAUA,OAHArD,qBAAU,YALW,WACjB,IAAMsD,EAAoB9C,EAAQ,IAClC6C,GAAe,SAAAD,GAAW,OAAIE,KAI9BC,KACD,CAAC/C,IAEA,sBAAKF,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAiBkD,MAAO,CAACC,MAAM,GAAD,OAAKL,EAAL,QAC7C,sBAAK9C,UAAU,gBAAf,UACI,uBAAOA,UAAU,eAAeG,KAAK,QAAQD,MAAM,IAAIkD,KAAK,WAC5D,uBAAOpD,UAAU,eAAeG,KAAK,QAAQD,MAAM,IAAIkD,KAAK,WAC5D,uBAAOpD,UAAU,eAAeG,KAAK,QAAQD,MAAM,IAAIkD,KAAK,WAC5D,uBAAOpD,UAAU,eAAeG,KAAK,QAAQD,MAAM,IAAIkD,KAAK,WAC5D,uBAAOpD,UAAU,eAAeG,KAAK,QAAQD,MAAM,IAAIkD,KAAK,iBAGpE,qBAAKpD,UAAU,gBAAf,SAAgCE,SAK7BmD,iBAAKR,GC5BdS,EAAwB,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,kBAAmBjB,EAAQ,EAARA,GAMzCkB,EALYnE,aAAY,SAACC,GAE3B,OADgBA,EAAMe,SAASA,SAASoD,MAAK,SAAA3D,GAAI,OAAIA,EAAKwC,KAAOA,KAClD/B,aAGa,0CAA4C,kBAC5E,OACI,mCACI,wBAAQP,UAAWwD,EACXE,QAAS,SAACC,GAAD,OAAWJ,EAAkBI,EAAOrB,IADrD,SAGW,qBAAKtC,UAAU,iCACV4D,MAAM,6BACNT,MAAM,KAAKU,OAAO,KAClBC,QAAQ,YAHb,SAIS,sBAAMC,EAAE,oVAOzBV,iBAAKC,G,uBClBPU,EAAgBC,YACzB,wBADyC,uCAEzC,WAAOhC,GAAP,SAAAZ,EAAA,sEACiBY,IADjB,mFAFyC,uDAOvCiC,EAAgBC,YAAY,CAC9Bf,KAAM,WACNgB,aAfkB,CAClB/D,SAAU,GACVgE,YAAa,GACbC,cAAe,QAafC,SAAU,CACNC,uBAAwB,SAAClF,EAAOmF,GAC5BnF,EAAMe,SAAWf,EAAMe,SAASuC,KAAI,SAAA9C,GAChC,OAAIA,EAAKwC,KAAOmC,EAAOC,QACZ,2BACA5E,GADP,IAEIS,WAAYT,EAAKS,YAGdT,MAInB6E,eAAgB,SAACrF,EAAOmF,GACpBnF,EAAM+E,YAAcI,EAAOC,UAGnCE,cAAe,SAACC,GACZA,EACKC,QAAQd,EAAce,SAAS,SAACzF,GAC7BA,EAAMgF,cAAgB,aAEzBQ,QAAQd,EAAcgB,WAAW,SAAC1F,EAAOmF,GACtCnF,EAAMgF,cAAgB,OACtBhF,EAAMe,SAAN,sBAAqBf,EAAMe,UAA3B,YAAwCoE,EAAOC,aAElDI,QAAQd,EAAciB,UAAU,SAAC3F,GAC9BA,EAAMgF,cAAgB,WAEzBY,gBAAe,kBAIrBC,EAAoBjB,EAApBiB,QAASC,EAAWlB,EAAXkB,QAGZZ,EAEAY,EAFAZ,uBACAG,EACAS,EADAT,eAGWQ,ICnDTE,EAAoBlB,YAAY,CAClCf,KAAM,eACNgB,aAPiB,CACjBhF,aAAc,GACdkG,SAAU,CAAC,UAAW,cAAe,SAMrCf,SAAU,CACNgB,iBAAkB,CACdJ,QAAS,SAAC7F,EAAOmF,GACbnF,EAAMF,aAAN,sBAAyBE,EAAMF,cAA/B,CAA6CqF,EAAOC,WAExDc,QAAS,SAACjD,GACN,MAAO,CAAEmC,QAAQ,2BAAMnC,GAAP,IAAgBxC,MAAO,OAG/C0F,sBAAuB,SAACnG,EAAOmF,GAC3BnF,EAAMF,aAAeE,EAAMF,aAAasG,QAAO,SAAA5F,GAAI,OAAIA,EAAKwC,KAAOmC,EAAOC,YAE9EiB,0BAA2B,SAACrG,GACxBA,EAAMF,aAAe,IAEzBwG,mBAAoB,SAACtG,EAAOmF,GACxBnF,EAAMF,aAAeE,EAAMF,aAAawD,KAAI,SAAA9C,GACxC,MAAoB2E,EAAOC,QAApBpC,EAAP,EAAOA,GAAIvC,EAAX,EAAWA,MACX,OAAID,EAAKwC,KAAOA,EACL,2BACAxC,GADP,IAEIC,UAGGD,SAMpBqF,EAAoBE,EAApBF,QAASC,EAAWC,EAAXD,QAEDD,IAGXI,EAIAH,EAJAG,iBACAE,EAGAL,EAHAK,sBACAE,EAEAP,EAFAO,0BACAC,EACAR,EADAQ,mBCmCWC,EApES,SAAC,GAAe,IAAdtD,EAAa,EAAbA,QACVD,EAAoCC,EAApCD,GAAIwD,EAAgCvD,EAAhCuD,MAAOC,EAAyBxD,EAAzBwD,MAAOC,EAAkBzD,EAAlByD,MAAOC,EAAW1D,EAAX0D,OAC3BC,EAAWC,cACX/G,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAaA,gBAevDmE,EAAoB6C,uBAAY,SAACzC,EAAOrB,GAC1CqB,EAAM0C,iBACNH,EAAS1B,EAAuBlC,MACjC,IAgBP,OACI,oBAAItC,UAAU,qBAAd,SACI,eAAC,IAAD,CAAMU,GAAE,mBAAc4B,GAAMtC,UAAU,UAAtC,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAea,IAAKmF,EAAOjF,IAAK+E,IAC/C,qBAAK9F,UAAU,gBAAf,SACI,cAAC,EAAD,CAAQE,MAAO+F,EAAOK,YAG9B,sBAAMtG,UAAU,iBAAhB,SAvBa,SAACuG,EAAMC,GACxB,GAAID,EAAKpE,OAASqE,EAAW,OAAOD,EAEpC,IAAME,EAAWF,EAAK5D,MAAM,EAAG6D,GAAa,MAE5C,MAAqB,MAAjBC,EAAS,IACFA,EAAS9D,MAAM,EAAG6D,EAAY,GAAK,MAGvCC,EAc+BC,CAAaZ,EAAO,MACtD,sBAAM9F,UAAU,mBAChB,uBAAMA,UAAU,iBAAhB,UAAkC+F,EAAlC,QACA,sBAAK/F,UAAU,mBAAf,UACI,cAAC,EAAD,CAAuBuD,kBAAmBA,EACnBjB,GAAIA,IAC3B,wBAAQtC,UAAU,kBACV0D,QAAS,SAACC,GAAD,OAhDT,SAACA,EAAOpB,GACxBoB,EAAM0C,iBAEN,IAAMM,EAAWvH,EAAaqE,MAAK,SAAA3D,GAAI,OAAIA,EAAKwC,KAAOA,KAEvD,GAAIqE,EAAU,CACV,GAAuB,MAAnBA,EAAS5G,MAAe,OAC5BmG,EAASN,EAAmB,CAACtD,GAAIA,EAAIvC,MAAO4G,EAAS5G,MAAQ,UAE7DmG,EAASX,EAAiBhD,IAuCMqE,CAAYjD,EAAOpB,IAD/C,SAEgB,qBAAKvC,UAAU,4BACV4D,MAAM,6BACNT,MAAM,KACNU,OAAO,KACPC,QAAQ,YAJb,SAKS,sBAAMC,EAAE,ojBChEtC8C,G,MATC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEd,OACI,qBAAK9G,UAAW8G,GAAoB,GAApC,SACI,qBAAK9G,UAAU,0CAAf,SAAyD,sBAAKA,UAAU,kBAAf,UAAiC,wBAAW,8BAAK,mCCLvG,G,MAAA,IAA0B,mCCgB1B+G,EAbM,WAEjB,OACI,sBAAK/G,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAqBa,IAAKmG,EAAUjG,IAAI,UACvD,oBAAGf,UAAU,sBAAb,kCACyB,uBADzB,0BCeGiH,G,MApBK,SAACxG,GACjB,IAAQ4D,EAAgB5D,EAAhB4D,YAER,IAAKA,EAAa,OAAO5D,EAAME,SAE/B,IAAMuG,EAAQC,IAAMC,SAASxE,IAAInC,EAAME,UAAU,SAAC0G,GAK9C,IAA4B,IAHfA,EAAM5G,MAAM8B,QAAQuD,MAAMwB,cACPC,QAAQlD,EAAYiD,eAErB,OAAOD,KAG1C,OADAG,QAAQC,IAAIP,GAER,mCACsB,IAAjBA,EAAM/E,OAAe+E,EAAQ,sBAAMlH,UAAU,eAAhB,gDCkD3B0H,EAtDK,WAEhB,IAAMxB,EAAWC,cACVlE,EAAehB,IAAfgB,YAED5B,EAAWhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASA,YAC/CiE,EAAgBjF,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASiE,iBACpDD,EAAehF,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASgE,eAEzD,EAAgC9E,oBAAS,GAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KAEAlI,qBAAU,WACkB,IAApBW,EAAS8B,QAAc0F,MAC5B,IAEHnI,qBAAU,WACkB,KAApBW,EAAS8B,QAAeyF,GAAY,KACzC,CAACvH,EAAS8B,SAGb,IAAM0F,EAAY,WACQ,YAAlBvD,GAEJ4B,EAASlC,EAAc/B,KAUrBiF,EAAQY,mBAAS,kBAPH,SAACzH,GAEjB,OAAOA,EAASuC,KAAI,SAAAL,GAChB,OAAO,cAAC,EAAD,CAAiBA,QAASA,GAAcA,EAAQD,OAIlCyF,CAAY1H,KAAW,CAACA,IAErD,OACI,qCACI,oBAAIL,UAAU,eAAd,SACI,cAAC,EAAD,CAAaqE,YAAaA,EAA1B,SACK6C,MAGT,sBAAKlH,UAAU,wBAAf,UACmB,YAAlBsE,EAA8B,cAAC,EAAD,CAASwC,QAAQ,0BAA4B,KACzD,UAAlBxC,EAA4B,cAAC,EAAD,IAAkB,KAC3C,wBAAQqD,SAAUA,EACV3H,UAAW2H,EAAW,qDACA,uBACtBjE,QAAS,kBAAMmE,KAHvB,2JC3DD,MAA0B,mCCyC1BG,G,MAlCQ,WACnB,IAAM9B,EAAWC,cACjB,EAA0B5G,mBAAS,IAAnC,mBAAOW,EAAP,KAAc+H,EAAd,KAEAvI,qBAAU,WACN,OAAO,WACHwI,EAAoB,OAEzB,IAEH,IAMMA,EAAsB,SAAChI,GACzBgG,EAASvB,EAAezE,KAG5B,OACI,sBAAKF,UAAU,kBAAf,UACI,uBAAOA,UAAU,yBACVE,MAAOA,EACPiI,SAAU,SAACxE,GAAD,OAAWsE,GAAS,SAAA/H,GAAK,OAAIyD,EAAMyE,OAAOlI,UACpDmI,WAAY,SAAA1E,GAAK,OAfhB,SAACA,GACS,KAAlBA,EAAM2E,SAAgC,UAAd3E,EAAM4E,KAC9BrC,EAASvB,EAAezE,IAaIsI,CAAQ7E,IAC7B8E,YAAY,iBACnB,wBAAQzI,UAAU,0BAA0B0D,QAAS,kBAAMwE,EAAoBhI,IAA/E,SACI,qBAAKF,UAAU,uBAAuBa,IAAK6H,EAAW3H,IAAI,kBCf3D4H,G,MAhBE,WAEb,OACI,qCACI,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,qBAAK3I,UAAU,YAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,EAAD,aCkEd4I,G,MAAO,SAAC,GAA+C,IAA9CrG,EAA6C,EAA7CA,QAASqE,EAAoC,EAApCA,YAAarD,EAAuB,EAAvBA,kBAE1ByC,EAAiEzD,EAAjEyD,MAAOC,EAA0D1D,EAA1D0D,OAAQH,EAAkDvD,EAAlDuD,MAAO+C,EAA2CtG,EAA3CsG,YAAa9C,EAA8BxD,EAA9BwD,MAAO+C,EAAuBvG,EAAvBuG,SAAuBvG,EAAbhC,UAE3D,OACI,qCACI,cAAC,EAAD,IACA,qBAAKP,UAAU,eAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,oBAAoBa,IAAKmF,EAAOjF,IAAI,aAGvD,sBAAKf,UAAU,wBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAQE,MAAO+F,EAAOK,SAE1B,oBAAItG,UAAU,sBAAd,SAAqC8F,IACrC,uBAAM9F,UAAU,sBAAhB,UAAuC+F,EAAvC,QACA,mBAAG/F,UAAU,sBAAb,SAAoC6I,IACpC,uBAAM7I,UAAU,yBAAhB,uBACc,sBAAMA,UAAU,+BAAhB,SAAgD8I,OAE9D,sBAAK9I,UAAU,aAAf,UACI,wBAAQA,UAAU,gBACV0D,QAAS,kBAAMkD,EAAYrE,IADnC,yBAEA,wBAAQvC,UAAU,qBACV0D,QAAS,kBAAMH,EAAkBhB,IADzC,8CAYbwG,EAtGW,WACtB,IAAM7C,EAAWC,cAGX9F,EAAWhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,SAASA,YAC/CjB,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAaA,gBAErD4J,EAAcC,cAAdD,UACR,EAA8BzJ,mBAAS,MAAvC,mBAAOgD,EAAP,KAAgB2G,EAAhB,KAGQ7G,EAAqBpB,IAArBoB,iBAER3C,qBAAU,WACNyJ,MACD,IAEH,IAAMA,EAAc,WAEhB,IAAMC,EAAsB,IAAIC,SAAQ,SAACC,EAASC,GAC9C,IAAMhH,EAAUlC,EAASoD,MAAK,SAAA3D,GAAI,OAAIA,EAAKwC,IAAM0G,UACjCQ,IAAZjH,GAAqC,OAAZA,EACzBgH,EAAO,iCAEPD,EAAQ/G,MAIVkH,EAAoB,IAAIJ,SAAQ,SAACC,GACnCjH,EAAiB2G,GACZU,MAAK,SAAAhI,GAAQ,OAAI4H,EAAQ5H,MACzBiI,OAAM,SAAAC,GAAK,OAAIpC,QAAQC,IAAImC,SAGpCP,QAAQQ,IAAI,CAACT,EAAqBK,IAC7BC,MAAK,SAAAhI,GAAQ,OAAIwH,GAAW,SAAA3G,GAAO,OAAIb,QACvCiI,OAAM,SAAAC,GAAK,OAAIpC,QAAQC,IAAImC,OAG9BhD,EAAcR,uBAAY,SAAC7D,GAC7B,IAAMoE,EAAWvH,EAAaqE,MAAK,SAAA3D,GAAI,OAAIA,EAAKwC,KAAOC,EAAQD,MAE3D,GAAIqE,EAAU,CACV,GAAuB,MAAnBA,EAAS5G,MAAe,OAC5BmG,EAASN,EAAmB,CAACtD,GAAIqE,EAASrE,GAAIvC,MAAO4G,EAAS5G,MAAQ,UAEtEmG,EAASX,EAAiBhD,MAEnC,CAACnD,IAEEmE,EAAoB6C,uBAAY,SAAC7D,GAEnC2D,EAAS1B,EAAuBjC,EAAQD,OACzC,IAIH,OACI,8BACKC,EAAU,cAAC,EAAD,CAAMA,QAASA,EAASgB,kBAAmBA,EAAmBqD,YAAaA,IAAiB,cAAC,EAAD,CAASE,QAAS,cC1EtH,I,MAAA,IAA0B,uCCe1BgD,GAbY,WAEvB,OACI,sBAAK9J,UAAU,wBAAf,UAEI,qBAAKA,UAAU,sBAAsBa,IAAKkJ,GAAQhJ,IAAI,cACtD,mBAAGf,UAAU,uBAAb,uECwCGgK,GArCO,WAElB,IAAM3J,EAAWhB,aAAY,SAACC,GAAD,OAAWA,EAAMe,SAASA,YACjDgE,EAAchF,aAAY,SAACC,GAAD,OAAWA,EAAMe,SAASgE,eAiBpD6C,EAAQY,mBAAQ,kBAfF,SAACzH,GAQjB,OAN0BA,EAASqF,QAAO,SAAAnD,GACtC,GAAIA,EAAQhC,UACR,OAAOgC,KAIUK,KAAI,SAAAL,GACzB,OACI,cAAC,EAAD,CAAiBA,QAASA,GAAcA,EAAQD,OAKhCyF,CAAY1H,KAAW,CAACA,IAEpD,OAAqB,IAAjB6G,EAAM/E,OACC,cAAC,GAAD,IAIP,mCACI,oBAAInC,UAAU,eAAd,SACI,cAAC,EAAD,CAAaqE,YAAaA,EAA1B,SACK6C,SCtBN+C,I,MAfO,WAGlB,OACI,qCACI,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,qBAAKjK,UAAU,4BAAf,SACI,cAAC,GAAD,WCRVkK,I,MAAe,SAAC,GAA+B,IAA9BnK,EAA6B,EAA7BA,MAAOoK,EAAsB,EAAtBA,iBAE1B,OACI,sBAAKnK,UAAU,gBAAf,UACI,uBAAOA,UAAU,uBACVG,KAAK,SACLiK,IAAI,IACJC,IAAI,MACJpK,UAAQ,EACRC,MAAOH,IACd,oBAAGC,UAAU,sBACT0D,QAAS,kBAAMyG,EAAiB,IADpC,UAEQ,mBAAGnK,UAAU,+BACb,mBAAGA,UAAU,kCAErB,mBAAGA,UAAU,uBACT0D,QAAS,kBAAMyG,GAAkB,IADrC,SAEQ,mBAAGnK,UAAU,uCAMlBqD,kBAAK6G,IAAc,SAACI,EAAWC,GAAZ,OAA0BD,EAAUvK,QAAUwK,EAAUxK,SCU3EyK,GA/BM,SAAC,GAAkC,IAAjC1E,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOzD,EAAkB,EAAlBA,GAAImI,EAAc,EAAdA,SAC/BvE,EAAWC,cAEXpG,EAAQV,aAAY,SAACC,GAEvB,OADgBA,EAAMF,aAAaA,aAAaqE,MAAK,SAAA3D,GAAI,OAAIA,EAAKwC,KAAOA,KAC1DvC,SAGZoK,EAAmB/D,uBAAY,SAAClG,GACrB,IAAVH,IAA0B,IAAXG,GACL,MAAVH,GAA2B,IAAVG,GACrBgG,EAASN,EAAmB,CAACtD,KAAIvC,MAAOA,EAAQG,OACjD,IAEH,OACI,qBAAIF,UAAqB,IAAVD,EAAc,kBAAoB,yCAAjD,UACI,oBAAIC,UAAU,qBAAd,SAAoC8F,IACpC,qBAAI9F,UAAU,qBAAd,UAAoC+F,EAApC,QACA,oBAAI/F,UAAU,qBAAd,SACI,qBAAKA,UAAU,0BAAf,SACG,cAAC,GAAD,CAAcmK,iBAAkBA,EAAkBpK,MAAOA,QAGhE,oBAAIC,UAAU,qBAAd,SACI,wBAAQA,UAAU,4BACV0D,QAAS,kBAAM+G,EAASnI,YC7B1CoI,GAAgB,WAElB,OACI,oBAAI1K,UAAU,qBAAd,SACI,uFAKGqD,kBAAKqH,I,SCsCLC,GA1CE,WACb,IAAMzE,EAAWC,cAEX/G,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAaA,gBAEvDwL,EAA4C,IAAxBxL,EAAa+C,OAEjCsI,EAAWrE,uBAAY,SAAC9D,GAC1B4D,EAAST,EAAsBnD,MAChC,IAEH,OACI,wBAAOtC,UAAU,cAAjB,UACQ,uBAAOA,UAAU,mBAAjB,SACI,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,mBACA,oBAAIA,UAAU,qBAAd,oBACA,oBAAIA,UAAU,qBAAd,qBACA,oBAAIA,UAAU,4BAGtB,wBAAOA,UAAU,mBAAjB,UAEQZ,EAAawD,KAAI,YAAgC,IAA9BkD,EAA6B,EAA7BA,MAAO/F,EAAsB,EAAtBA,MAAOgG,EAAe,EAAfA,MAAOzD,EAAQ,EAARA,GACpC,OACI,cAAC,GAAD,CAAcmI,SAAUA,EACV3E,MAAOA,EACP/F,MAAOA,EACPgG,MAAOA,EACPzD,GAAIA,GACCuI,mBAK3BD,EAAoB,cAAC,GAAD,IAAmB,YC2BhDE,GAjEK,WAChB,IAAM5E,EAAWC,cAEX/G,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAaA,gBACvDkG,EAAWjG,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAakG,YAEzD,EAAoC/F,mBAAS,GAA7C,mBAAOwL,EAAP,KAAmBC,EAAnB,KACA,EAA0CzL,mBAAS,GAAnD,mBAAO0L,EAAP,KAAsBxL,EAAtB,KACA,EAAoCF,mBAAS,IAA7C,mBAAO2L,EAAP,KAAmBC,EAAnB,KACA,EAA0B5L,mBAAS,GAAnC,mBAAO6L,EAAP,KAAcC,EAAd,KACA,EAAgC9L,oBAAS,GAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KAEAlI,qBAAU,WACN,IAAM4L,EAAgBlM,EAAaQ,QAAO,SAACC,EAAOC,GAE/C,OAAOD,EADiBC,EAAhBiG,MAAgBjG,EAATC,QAEf,GAEHiL,GAAc,SAAAD,GAAU,OAAIQ,KAAKC,KAAKF,EAAgBF,EAAQ,KAAO,SACtE,CAAChM,EAAcgM,IAElB1L,qBAAU,WACN,IAAMF,EAAgBJ,EAAaQ,QAAO,SAACC,EAAOC,GAE9C,OAAOD,EADSC,EAATC,QAER,GAEHN,GAAiB,SAAAwL,GAAa,OAAIzL,OACnC,CAACJ,IAEJM,qBAAU,WACNN,EAAa+C,OAAS,EAAIyF,GAAY,GAASA,GAAY,KAC5D,CAACxI,EAAa+C,SAgBjB,OACQ,sBAAKnC,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,oBACA,uBAAMA,UAAU,sBAAhB,oBAA8C+K,EAA9C,QACA,uBAAM/K,UAAU,sBAAhB,0BAAoDiL,KACpD,uBAAOjL,UAAU,sBACVyI,YAAY,aACZvI,MAAOgL,EACP/C,SAAU,SAACxE,GAAD,OAtBb,SAACA,GACb,IAAMzD,EAAQyD,EAAMyE,OAAOlI,MAC3BiL,GAAc,SAAAD,GAAU,OAAIhL,KAE5BoF,EAAShF,SAAQ,SAAAmL,GACSJ,EAAtBnL,IAAUuL,EAAqB,GAAgB,MAiBfC,CAAQ/H,MACpC,wBAAQD,QAAS,kBAbzBwC,EAASP,UACTwF,GAAc,SAAAD,GAAU,MAAI,OAaZvD,SAAUA,EACV3H,UAAW2H,EAAW,qDACA,uBAH9B,0BC1CDgE,I,MAdE,WAGb,OACI,qCACI,cAAC,EAAD,IACA,sBAAK3L,UAAU,OAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,YCdD,OAA0B,qCCwB1B4L,I,MAlBC,WAEZ,OACI,qBAAK5L,UAAU,UAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAea,IAAKgL,GAAa9K,IAAI,UACpD,sBAAKf,UAAU,kBAAf,UACI,oBAAIA,UAAU,iBAAd,4BACA,oBAAGA,UAAU,gBAAb,yHAEM,cAAC,IAAD,CAAMA,UAAU,gBAAgBU,GAAG,IAAnC,oCCcXoL,GArBH,WAER,OACI,cAAC,IAAD,UACI,qBAAK9L,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+L,KAAK,aAAaC,QAAS,cAAC,GAAD,MAElC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,MAE7B,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,EAAD,MAE3C,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,cCZ9BC,GANDC,YAAe,CACzB/G,QAAS,CAAC9E,WAAUjB,gBACpB+M,WAAY,SAAAC,GAAoB,OAAIA,KACpCC,UAAUC,ICIMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJc,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzD,MAAK,SAAC0D,GAClCA,EAAaC,mB","file":"static/js/main.fcff679f.chunk.js","sourcesContent":["\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst HeaderCartTotal = () => {\r\n    \r\n    const cartProducts = useSelector(state => state.cartProducts.cartProducts);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        const totalCount = cartProducts.reduce((total, item) => {\r\n            const {count} = item;\r\n            return total + count;\r\n        }, 0);\r\n\r\n        setProductsCount(productsCount => totalCount)\r\n    }, [cartProducts])\r\n\r\n    if (productsCount === 0) return null;\r\n\r\n    return (\r\n        <input className=\"header__total-count\"\r\n               readOnly\r\n               value={productsCount < 100 ? productsCount : '99+'}\r\n               type='text'></input>\r\n    )\r\n}\r\n\r\nexport default HeaderCartTotal;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst HeaderFavouriteTotal = () => {\r\n    \r\n    const products = useSelector(state => state.products.products);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        let count = 0;\r\n        products.forEach(item => {\r\n            if (item.favourite === true) {\r\n                count ++\r\n            }\r\n        })\r\n        setProductsCount(productsCount =>  count)\r\n    }, [products])\r\n\r\n    if (productsCount === 0) return null;\r\n\r\n    return (\r\n        <input className=\"header__total-count\"\r\n               readOnly\r\n               value={productsCount < 100 ? productsCount : '99+'}\r\n               type='text'></input>\r\n    )\r\n}\r\n\r\nexport default HeaderFavouriteTotal","export default __webpack_public_path__ + \"static/media/heart.1978922e.svg\";","export default __webpack_public_path__ + \"static/media/cart.47495f61.svg\";","\r\n\r\nimport {\r\n    Link,\r\n    NavLink\r\n} from 'react-router-dom'\r\n\r\n\r\nimport './header.scss';\r\n\r\nimport HeaderCartTotal from './HeaderCartTotal';\r\nimport HeaderFavouriteTotal from './HeaderFavouriteTotal';\r\n\r\n\r\nimport favouriteImg from '../../assets/heart.svg'\r\nimport cartImg from '../../assets/cart.svg'\r\n\r\n\r\nconst Header = (props) => {\r\n    \r\n    return (\r\n        <div className='header'>\r\n            <div className='header__container'>\r\n\r\n                <div className='header__logo'>\r\n                    <Link className='header__logo-link'\r\n                        to='/'>FakeStore</Link>\r\n                </div>\r\n                {\r\n                    props.children\r\n                }\r\n                <ul className='header__menu-list'>\r\n                    <li className='header__list-item'>\r\n                        <NavLink className={isActive =>\r\n                                    \"header__link\" + (!isActive ? \" header__link--active\" : \"\")\r\n                                 }\r\n                                 to='/favourite'>\r\n                                     <img src={favouriteImg} alt='favourite'/>\r\n                                </NavLink>\r\n                        <HeaderFavouriteTotal/>\r\n                    </li>\r\n                    <li className='header__list-item'>\r\n                        <NavLink className={isActive => \r\n                                    'header__link' + (!isActive ? ' header__link--active' : '')\r\n                                 }\r\n                                 to='/cart'>\r\n                                     <img src={cartImg} alt='cart'/>\r\n                                </NavLink>\r\n                        <HeaderCartTotal/>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import { useSelector } from \"react-redux\";\r\nimport { useHttpHook } from \"../hooks/useHttpHook\"\r\n\r\nexport const useProductService = () => {\r\n    const _apiBase = 'https://fakestoreapi.com';\r\n\r\n    const products = useSelector(state => state.products.products)\r\n\r\n    const {request} = useHttpHook();\r\n\r\n    const getProducts = async () => {\r\n        const itemsCount = products.length === 0 ? 8 : 4;\r\n        const response = await request(`${_apiBase}/products?limit=${products.length + itemsCount}`);\r\n        return _addFavouriteProperty(response);\r\n    }\r\n\r\n    const getSingleProduct = async (id) => {\r\n        const product = await request(`${_apiBase}/products/${id}`);\r\n        \r\n        return  _addFavouriteProperty(product);\r\n    } \r\n\r\n    const _addFavouriteProperty = (res) => {\r\n        if (Array.isArray(res)) {\r\n            const newProducts = res.slice(products.length, res.length);\r\n            const productsWithFavourite = newProducts.map(product => {\r\n                product.favourite = false;\r\n                return product\r\n            });\r\n\r\n            return productsWithFavourite;\r\n        } else {\r\n            res.favourite = false\r\n            return res\r\n        }\r\n    }\r\n\r\n    return {\r\n        getProducts,\r\n        getSingleProduct,\r\n    }\r\n}\r\n","\r\nexport const useHttpHook = () => {\r\n    \r\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        request\r\n    }\r\n}","import { useEffect, useState } from 'react';\r\nimport './rating.scss';\r\nimport { memo } from 'react';\r\nconst Rating = ({value}) => {\r\n    const [ratingWidth, setRatingWidth] = useState(0)\r\n    \r\n    const changeRating = () => {\r\n        const activeRatingWidth = value / 0.05;\r\n        setRatingWidth(ratingWidth => activeRatingWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeRating();\r\n    }, [value])\r\n    return (\r\n        <div className='rating'>\r\n            <div className='rating__body'>\r\n                <div className='rating__active' style={{width: `${ratingWidth}%`}}></div>\r\n                <div className='rating__items'>\r\n                    <input className='rating__item' type='radio' value='1' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='2' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='3' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='4' name='rating'></input>\r\n                    <input className='rating__item' type='radio' value='5' name='rating'></input>\r\n                </div>\r\n            </div>\r\n            <div className='rating__value'>{value}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Rating)","import { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ToggleFavouriteButton = ({onToggleFavourite, id}) => {\r\n    const favourite = useSelector((state) => {\r\n        const product = state.products.products.find(item => item.id === id)\r\n        return product.favourite\r\n    })\r\n\r\n    const buttonClass = favourite ? 'product__button product__button--active' : 'product__button';\r\n    return (\r\n        <>\r\n            <button className={buttonClass}\r\n                    onClick={(event) => onToggleFavourite(event, id)}>\r\n                       \r\n                       <svg className=\"product__button-img--favourite\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            width=\"24\" height=\"24\"\r\n                            viewBox=\"0 0 24 24\">\r\n                                <path d=\"M12 9.229c.234-1.12 1.547-6.229 5.382-6.229 2.22 0 4.618 1.551 4.618 5.003 0 3.907-3.627 8.47-10 12.629-6.373-4.159-10-8.722-10-12.629 0-3.484 2.369-5.005 4.577-5.005 3.923 0 5.145 5.126 5.423 6.231zm-12-1.226c0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-7.962-9.648-9.028-12-3.737-2.338-5.262-12-4.27-12 3.737z\"/>\r\n                            </svg>\r\n                    </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ToggleFavouriteButton)","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst  initialState = {\r\n    products: [],\r\n    filterValue: '',\r\n    loadingStatus: 'idle',\r\n}\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n    'product/fetchProducts',\r\n    async (getProducts) => {\r\n        return await getProducts()\r\n    }\r\n)\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState,\r\n    reducers: {\r\n        toggleFavouriteProduct: (state, action) => {\r\n            state.products = state.products.map(item => {\r\n                if (item.id === action.payload) {\r\n                    return {\r\n                        ...item,\r\n                        favourite: !item.favourite\r\n                    }\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        },\r\n        filterProducts: (state, action) => {\r\n            state.filterValue = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchProducts.pending, (state) => {\r\n                state.loadingStatus = 'loading'\r\n            })\r\n            .addCase(fetchProducts.fulfilled, (state, action) => {\r\n                state.loadingStatus = 'idle'\r\n                state.products = [...state.products, ...action.payload]\r\n            })\r\n            .addCase(fetchProducts.rejected, (state) => {\r\n                state.loadingStatus = 'error'\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {reducer, actions} = productsSlice;\r\n\r\nexport const {\r\n    toggleFavouriteProduct,\r\n    filterProducts,\r\n} = actions\r\n\r\nexport default reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    cartProducts: [],\r\n    promoArr: ['123_ddd', 'hello_worls', 'oleg'],\r\n}\r\n\r\nconst cartProductsSlice = createSlice({\r\n    name: 'cartProducts',\r\n    initialState,\r\n    reducers: {\r\n        addProductToCart: {\r\n            reducer: (state, action) => {\r\n                state.cartProducts = [...state.cartProducts, action.payload]\r\n            },\r\n            prepare: (product) => {\r\n                return { payload: { ...product, count: 1} }\r\n            }\r\n        },\r\n        deleteProductFromCart: (state, action) => {\r\n            state.cartProducts = state.cartProducts.filter(item => item.id !== action.payload)\r\n        },\r\n        deleteAllProductsFromCart: (state) => {\r\n            state.cartProducts = []\r\n        },\r\n        changeProductCount: (state, action) => {\r\n            state.cartProducts = state.cartProducts.map(item => {\r\n                const {id, count} = action.payload\r\n                if (item.id === id) {\r\n                    return {\r\n                        ...item,\r\n                        count\r\n                    }\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\nconst {reducer, actions} = cartProductsSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    addProductToCart,\r\n    deleteProductFromCart,\r\n    deleteAllProductsFromCart,\r\n    changeProductCount\r\n} = actions","\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './productListItem.scss';\r\n\r\nimport Rating from '../rating/Rating'\r\nimport ToggleFavouriteButton from './ToggleFavouriteButton';\r\n\r\nimport { toggleFavouriteProduct } from '../../slices/productsSlice';\r\nimport { changeProductCount, addProductToCart } from '../../slices/cartProductsSlice';\r\nimport { useCallback } from 'react';\r\n\r\n\r\n\r\nconst ProductListItem = ({product}) => {\r\n        const { id, title, price, image, rating } = product\r\n        const dispatch = useDispatch()\r\n        const cartProducts = useSelector(state => state.cartProducts.cartProducts);\r\n        \r\n        const onAddToCart = (event, product) => {\r\n            event.preventDefault()\r\n    \r\n            const cartItem = cartProducts.find(item => item.id === id)\r\n            \r\n            if (cartItem) {\r\n                if (cartItem.count === 100) return;\r\n                dispatch(changeProductCount({id: id, count: cartItem.count + 1}))\r\n            } else {\r\n                dispatch(addProductToCart(product))\r\n            }\r\n        }\r\n    \r\n        const onToggleFavourite = useCallback((event, id) => {\r\n            event.preventDefault();\r\n            dispatch(toggleFavouriteProduct(id))\r\n        }, [])\r\n    \r\n        const validateText = (text, maxLength) => {\r\n            if (text.length < maxLength) return text\r\n            \r\n            const newTitle = text.slice(0, maxLength) + '...'\r\n            \r\n            if (newTitle[19] === ' ') {\r\n                return newTitle.slice(0, maxLength - 1) + '...'\r\n            }\r\n            \r\n            return newTitle\r\n        }\r\n\r\n\r\n\r\n    return (\r\n        <li className=\"product-list__item\">\r\n            <Link to={`/product/${id}`} className='product'>\r\n                <div className='product__img-block'>\r\n                    <img className='product__img' src={image} alt={title}/>\r\n                    <div className='product__rate'>\r\n                        <Rating value={rating.rate}></Rating>\r\n                    </div>\r\n                </div>\r\n                <span className='product__title'>{validateText(title, 20)}</span>\r\n                <span className='product__descr'></span>\r\n                <span className='product__price'>{price} $</span>\r\n                <div className='product__buttons'>\r\n                    <ToggleFavouriteButton onToggleFavourite={onToggleFavourite}\r\n                                           id={id}/>\r\n                    <button className=\"product__button\"\r\n                            onClick={(event) => onAddToCart(event, product)}>\r\n                                    <svg className=\"product__button-img--cart\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\" \r\n                                         width=\"24\" \r\n                                         height=\"24\" \r\n                                         viewBox=\"0 0 24 24\">\r\n                                             <path d=\"M10.975 8l.025-.5c0-.517-.067-1.018-.181-1.5h5.993l-.564 2h-5.273zm-2.475 10c-.828 0-1.5.672-1.5 1.5 0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm11.305-15l-3.432 12h-10.428l-.455-1.083c-.323.049-.653.083-.99.083-.407 0-.805-.042-1.191-.114l1.306 3.114h13.239l3.474-12h1.929l.743-2h-4.195zm-6.305 15c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm-4.5-10.5c0 2.485-2.018 4.5-4.5 4.5-2.484 0-4.5-2.015-4.5-4.5s2.016-4.5 4.5-4.5c2.482 0 4.5 2.015 4.5 4.5zm-2-.5h-2v-2h-1v2h-2v1h2v2h1v-2h2v-1z\"/>\r\n                                        </svg>\r\n                            </button>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ProductListItem;\r\n\r\n","import './spinner.scss'\r\nconst Spinner = ({myClass}) => {\r\n\r\n    return (\r\n        <div className={myClass ? myClass : ''}>\r\n            <div className=\"loadingio-spinner-dual-ring-ycd50ghcpnm\"><div className=\"ldio-sjhf7eoq5i\"><div></div><div><div></div></div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","export default __webpack_public_path__ + \"static/media/error.26c4250f.jpg\";","import './errorMessage.scss'\r\nimport errorJpg from '../../assets/error.jpg';\r\n\r\nconst ErrorMessage = () => {\r\n\r\n    return (\r\n        <div className=\"error-message\">\r\n            <img className=\"error-message__img\" src={errorJpg} alt=\"error\"/>\r\n            <p className=\"error-message__text\">\r\n                Something is wrong...<br/>\r\n                Please try again\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, { useEffect } from \"react\";\r\nimport './filterItems.scss';\r\n\r\nconst FilterItems = (props) => {\r\n    const { filterValue } = props;\r\n   \r\n    if (!filterValue) return props.children;\r\n    \r\n    const items = React.Children.map(props.children, (child) => {\r\n        \r\n        const text = child.props.product.title.toLowerCase()\r\n        const includeFilterValue = text.indexOf(filterValue.toLowerCase());\r\n                \r\n        if (includeFilterValue !== -1) return child;\r\n    }) \r\n    console.log(items)\r\n    return (\r\n        <>\r\n            {items.length !== 0 ? items : <span className=\"filter__span\">Nothing found for your request</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterItems;","import './productList.scss'\r\n\r\nimport { useEffect, useState, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useProductService } from '../../services/useProductService';\r\n\r\nimport ProductListItem from '../productListItem/ProductListItem'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport FilterItems from '../filterItems/FilterItems';\r\n\r\nimport { fetchProducts } from '../../slices/productsSlice';\r\n\r\nconst ProductList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {getProducts} = useProductService()\r\n\r\n    const products = useSelector(state => state.products.products)\r\n    const loadingStatus = useSelector(state => state.products.loadingStatus)\r\n    const filterValue =  useSelector(state => state.products.filterValue)\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (products.length === 0) loadItems();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (products.length === 20) setDisabled(true)\r\n    }, [products.length])\r\n\r\n   \r\n    const loadItems = () => {\r\n        if (loadingStatus === 'loading') return;\r\n        \r\n        dispatch(fetchProducts(getProducts))\r\n    }\r\n\r\n    const renderItems = (products) => {\r\n        \r\n        return products.map(product => {\r\n            return <ProductListItem product={product} key={product.id}></ProductListItem>\r\n        })\r\n    }\r\n    \r\n    const items = useMemo( () => renderItems(products), [products]);\r\n    \r\n    return (\r\n        <>\r\n            <ul className='product-list'>\r\n                <FilterItems filterValue={filterValue}>\r\n                    {items}\r\n                </FilterItems>\r\n            </ul>\r\n            <div className='product-list__wrapper'>\r\n            {loadingStatus === 'loading' ? <Spinner myClass=\"product-list__spinner\"/> : null}\r\n            {loadingStatus === 'error' ? <ErrorMessage/> : null}\r\n                <button disabled={disabled}\r\n                        className={disabled ? 'product-list__button product-list__button--disable' : \r\n                                              'product-list__button'}\r\n                        onClick={() => loadItems()}>Загрузить больше товаров</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductList;","export default __webpack_public_path__ + \"static/media/search.a9f70789.svg\";","import { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { filterProducts } from \"../../slices/productsSlice\";\r\n\r\nimport searchImg from '../../assets/search.svg'\r\nimport './searchProducts.scss';\r\n\r\nconst SearchProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            onChangeFilterValue('')\r\n        }\r\n    }, [])\r\n\r\n    const onEnter = (event) => {\r\n        if (event.ketCode === 13 || event.key === 'Enter') {\r\n            dispatch(filterProducts(value))\r\n        }\r\n    }\r\n\r\n    const onChangeFilterValue = (value) => {\r\n        dispatch(filterProducts(value))\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-products\">\r\n            <input className=\"search-products__input\"\r\n                   value={value}\r\n                   onChange={(event) => setValue(value => event.target.value)}\r\n                   onKeyPress={event => onEnter(event)}\r\n                   placeholder=\"find product\"/>\r\n            <button className=\"search-products__button\" onClick={() => onChangeFilterValue(value)}>\r\n                <img className=\"search-products__img\" src={searchImg} alt=\"search\"/>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchProducts","import Header from \"../../header/Header\";\r\nimport ProductList from \"../../productList/ProductList\";\r\nimport SearchProducts from \"../../searchProducts/SearchProducts\";\r\nimport './mainPage.scss';\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <SearchProducts/>\r\n            </Header>\r\n            <div className=\"main-page\">\r\n                <div className=\"main-page__container\">\r\n                    <ProductList></ProductList>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { toggleFavouriteProduct } from \"../../../slices/productsSlice\";\r\nimport { addProductToCart, changeProductCount } from \"../../../slices/cartProductsSlice\";\r\n\r\nimport { useProductService } from \"../../../services/useProductService\";\r\n\r\nimport Header from \"../../header/Header\";\r\nimport Rating from \"../../rating/Rating\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\n\r\nimport './singleProductPage.scss';\r\n\r\nconst SingleProductPage = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    const products = useSelector(state => state.products.products)\r\n    const cartProducts = useSelector(state => state.cartProducts.cartProducts)\r\n\r\n    const { productId } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n\r\n\r\n    const { getSingleProduct } = useProductService();\r\n    \r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, [])\r\n    \r\n    const loadProduct = () => {\r\n\r\n        const getProductFromState = new Promise((resolve, reject) => {\r\n            const product = products.find(item => item.id == productId);\r\n            if (product === undefined || product === null) {\r\n                reject(\"product dosn't exist in store\");\r\n            } else {\r\n                resolve(product)\r\n            }\r\n        })\r\n\r\n        const getProductFromAPI = new Promise((resolve) => {\r\n            getSingleProduct(productId)\r\n                .then(response => resolve(response))\r\n                .catch(error => console.log(error))\r\n        })\r\n\r\n        Promise.any([getProductFromState, getProductFromAPI])\r\n            .then(response => setProduct(product => response))\r\n            .catch(error => console.log(error));    \r\n    }\r\n\r\n    const onAddToCart = useCallback((product) => {\r\n        const cartItem = cartProducts.find(item => item.id === product.id)\r\n            \r\n            if (cartItem) {\r\n                if (cartItem.count === 100) return;\r\n                dispatch(changeProductCount({id: cartItem.id, count: cartItem.count + 1}))\r\n            } else {\r\n                dispatch(addProductToCart(product))\r\n            }\r\n    }, [cartProducts])\r\n\r\n    const onToggleFavourite = useCallback((product) => {\r\n        \r\n        dispatch(toggleFavouriteProduct(product.id))\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {product ? <View product={product} onToggleFavourite={onToggleFavourite} onAddToCart={onAddToCart}/> : <Spinner myClass={'center'}/>}\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst View = ({product, onAddToCart, onToggleFavourite}) => {\r\n\r\n    const {image, rating, title, description, price, category, favourite} = product;\r\n    \r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className='product-page'>\r\n                <div className='product-page__container'>\r\n                    <div className='product-page__img-block'>\r\n                        <img className='product-page__img' src={image} alt=\"ffrfrg\"></img>\r\n                    </div>\r\n\r\n                    <div className='product-page__content'>\r\n                        <div className='product-page__rate'>\r\n                            <Rating value={rating.rate}></Rating>\r\n                        </div>\r\n                        <h4 className='product-page__title'>{title}</h4>\r\n                        <span className='product-page__price'>{price} $</span>\r\n                        <p className='product-page__descr'>{description}</p>\r\n                        <span className='product-page__category'>\r\n                            category: <span className=\"product-page__category--bold\">{category}</span>\r\n                        </span>\r\n                        <div className='btns-block'>\r\n                            <button className='btn btn--cart'\r\n                                    onClick={() => onAddToCart(product)}>Add to cart</button>\r\n                            <button className='btn btn--favourite'\r\n                                    onClick={() => onToggleFavourite(product)}>Toggle Favourite</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SingleProductPage\r\n","export default __webpack_public_path__ + \"static/media/empty-box.7ec5aa8d.jpg\";","import boxJpg from '../../assets/empty-box.jpg';\r\n\r\nconst EmptyFavouriteList = () => {\r\n\r\n    return (\r\n        <div className=\"favourite-list__empty\">\r\n\r\n            <img className=\"favourite-list__img\" src={boxJpg} alt=\"empty box\"/>\r\n            <p className=\"favourite-list__text\">\r\n                You have not added any product to your favorites yet.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyFavouriteList","import '../productList/productList.scss';\r\nimport './favouriteList.scss';\r\n\r\nimport { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ProductListItem from '../productListItem/ProductListItem'\r\nimport EmptyFavouriteList from './EmptyFavouriteList';\r\nimport FilterItems from '../filterItems/FilterItems';\r\n\r\n\r\nconst FavouriteList = () => {\r\n\r\n    const products = useSelector((state) => state.products.products);\r\n    const filterValue = useSelector((state) => state.products.filterValue)\r\n\r\n    const renderItems = (products) => {\r\n        \r\n        const favouriteProducts = products.filter(product => {\r\n            if (product.favourite) {\r\n                return product\r\n            }\r\n        })\r\n\r\n        return favouriteProducts.map(product => {    \r\n            return (\r\n                <ProductListItem product={product} key={product.id}></ProductListItem>\r\n            )\r\n        })   \r\n    }\r\n\r\n    const items = useMemo(() => renderItems(products), [products])\r\n\r\n    if (items.length === 0) {\r\n        return <EmptyFavouriteList/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className='product-list'>\r\n                <FilterItems filterValue={filterValue}>\r\n                    {items}\r\n                </FilterItems>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavouriteList;","import FavouriteList from \"../../favouriteList/FavouriteList\"\r\nimport Header from \"../../header/Header\";\r\nimport SearchProducts from \"../../searchProducts/SearchProducts\";\r\nimport './favouritePage.scss';\r\nconst FavouritePage = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <SearchProducts/>\r\n            </Header>\r\n            <div className=\"favourite-page__container\">\r\n                <FavouriteList/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavouritePage","\r\nimport './productInput.scss';\r\n\r\nimport { memo } from \"react\";\r\n\r\nconst ProductInput = ({count, onCalcInputValue}) => {\r\n    \r\n    return (\r\n        <div className=\"product-input\">\r\n            <input className=\"product-input__input\"\r\n                   type=\"number\"\r\n                   min=\"0\"\r\n                   max=\"100\"\r\n                   readOnly\r\n                   value={count}/>\r\n            <b className=\"product-input__plus\"\r\n                onClick={() => onCalcInputValue(1)}>\r\n                    <i className=\"product-input__plus-item-1\"></i>\r\n                    <i className=\"product-input__plus-item-2\"></i>\r\n            </b>\r\n            <b className=\"product-input__minus\"\r\n                onClick={() => onCalcInputValue(-1)}>\r\n                    <i className=\"product-input__minus-item-1\"></i>\r\n            </b> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ProductInput, (prevProps, nextProps) => prevProps.count === nextProps.count);","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { changeProductCount } from \"../../slices/cartProductsSlice\";\r\n\r\nimport ProductInput from \"../productInput/productInput\"\r\n\r\nconst CartListItem = ({title, price, id, onDelete}) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const count = useSelector((state) => {\r\n        const product = state.cartProducts.cartProducts.find(item => item.id === id);\r\n        return product.count;\r\n    })\r\n\r\n     const onCalcInputValue = useCallback((value) => {\r\n        if (count === 0 && value === -1) return;\r\n        if (count === 100 && value === 1) return;\r\n        dispatch(changeProductCount({id, count: count + value}))\r\n    }, [])\r\n\r\n    return (\r\n        <tr className={count !== 0 ? \"cart__table-row\" : \"cart__table-row cart__table-row--empty\"}>\r\n            <td className=\"cart__table-column\">{title}</td>\r\n            <td className=\"cart__table-column\">{price} $</td>\r\n            <td className=\"cart__table-column\">\r\n                <div className='cart__table-input-block'>\r\n                   <ProductInput onCalcInputValue={onCalcInputValue} count={count}/> \r\n                </div>\r\n            </td>\r\n            <td className=\"cart__table-column\">\r\n                <button className=\"cart__table-button-delete\"\r\n                        onClick={() => onDelete(id)}/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CartListItem","import { memo } from \"react\"\r\n\r\n\r\nconst EmptyCartList = () => {\r\n    \r\n    return (\r\n        <tr className=\"cart__table--empty\">\r\n            <td>Your cart is empty. Please select a product to buy</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default memo(EmptyCartList);","\r\nimport { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { deleteProductFromCart } from \"../../slices/cartProductsSlice\";\r\nimport CartListItem from '../cartListItem/CartListItem';\r\nimport EmptyCartList from \"./EmptyCartList\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst CartList = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const cartProducts = useSelector(state => state.cartProducts.cartProducts);\r\n\r\n    const emptyCartProducts = cartProducts.length === 0; \r\n\r\n    const onDelete = useCallback((id) => {\r\n        dispatch(deleteProductFromCart(id))\r\n    }, [])\r\n\r\n    return (\r\n        <table className=\"cart__table\">\r\n                <thead className=\"cart__table-head\">\r\n                    <tr className=\"cart__table-row\">\r\n                        <td className=\"cart__table-column\">Name:</td>\r\n                        <td className=\"cart__table-column\">Price:</td>\r\n                        <td className=\"cart__table-column\">Amount:</td>\r\n                        <td className=\"cart__table-column\"></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className='cart__table-body'>\r\n                    {\r\n                        cartProducts.map(({title, count, price, id}) => {\r\n                            return (\r\n                                <CartListItem onDelete={onDelete}\r\n                                              title={title}\r\n                                              count={count}\r\n                                              price={price}\r\n                                              id={id}\r\n                                              key={uuidv4()}/>        \r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        emptyCartProducts ? <EmptyCartList/> : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    )\r\n}\r\n\r\nexport default CartList","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { deleteAllProductsFromCart } from \"../../slices/cartProductsSlice\";\r\n\r\n\r\nconst CartSidebar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cartProducts = useSelector(state => state.cartProducts.cartProducts);\r\n    const promoArr = useSelector(state => state.cartProducts.promoArr);\r\n\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalProducts, setProductsCount] = useState(0)\r\n    const [promoValue, setPromoValue] = useState('')\r\n    const [promo, setPromo] = useState(1);\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const productsPrice = cartProducts.reduce((total, item) => {\r\n            const {price, count} = item;\r\n           return total + price * count\r\n        }, 0);\r\n\r\n        setTotalPrice(totalPrice => Math.ceil(productsPrice * promo * 100) / 100);\r\n    }, [cartProducts, promo])\r\n\r\n    useEffect(() => {\r\n        const productsCount = cartProducts.reduce((total, item) => {\r\n            const {count} = item;\r\n            return total + count;\r\n        }, 0);\r\n\r\n        setProductsCount(totalProducts => productsCount)\r\n    }, [cartProducts])\r\n\r\n    useEffect(() => {\r\n        cartProducts.length > 0 ? setDisabled(false) : setDisabled(true)\r\n    }, [cartProducts.length])\r\n\r\n    const onPromo = (event) => {\r\n        const value = event.target.value;\r\n        setPromoValue(promoValue => value);\r\n\r\n        promoArr.forEach(promoCode => {\r\n            value === promoCode ? setPromo(0.9) : setPromo(1);\r\n        })\r\n    }\r\n\r\n    const createOrder = () => {\r\n        dispatch(deleteAllProductsFromCart());\r\n        setPromoValue(promoValue => '')\r\n    }\r\n\r\n    return (\r\n            <div className=\"cart__sidebar\">\r\n                <h4 className=\"cart__sidebar-title\">Total:</h4>\r\n                <span className=\"cart__sidebar-total\">Price: {totalPrice} $</span>\r\n                <span className=\"cart__sidebar-total\">Total goods: {totalProducts}</span>\r\n                <input className=\"cart__sidebar-input\" \r\n                       placeholder=\"Promo code\"\r\n                       value={promoValue}\r\n                       onChange={(event) => onPromo(event)}/>\r\n                <button onClick={() => createOrder()}\r\n                        disabled={disabled}\r\n                        className={disabled ? \"cart__sidebar-button cart__sidebar-button--disable\"  :\r\n                                              \"cart__sidebar-button\"}>Checkout</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CartSidebar;","\r\nimport CartList from \"../../cartList/CartList\"\r\nimport CartSidebar from \"../../cartSidebar/CartSidebar\"\r\nimport Header from \"../../header/Header\"\r\nimport './cartPage.scss'\r\n\r\nconst CartPage = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"cart\">\r\n                <CartList/>\r\n                <CartSidebar/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartPage","export default __webpack_public_path__ + \"static/media/error404.27dfa202.png\";","import { Link } from \"react-router-dom\";\r\n\r\nimport error404Img from '../../../assets/error404.png';\r\nimport './page404.scss';\r\n\r\n\r\nconst Page404 = () => {\r\n\r\n    return (\r\n        <div className=\"page404\">\r\n            <div className=\"page404__container\">\r\n                <img className=\"page404__img\" src={error404Img} alt=\"error\"/>\r\n                <div className=\"page404__column\">\r\n                    <h2 className=\"page404__title\">Page not found</h2>\r\n                    <p className=\"page404__text\">We're sorry, but it lools like the page you're \r\n                       looking for isn't here. Try retyping the URL or returning \r\n                       to <Link className=\"page404__link\" to=\"/\">Main page</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404","\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\n\r\nimport MainPage from \"../pages/mainPage/MainPage\";\r\nimport SingleProductPage from \"../pages/singleProductPage/SingleProductPage\";\r\nimport FavouritePage from \"../pages/favouritePage.js/FavouritePage\";\r\nimport CartPage from \"../pages/cartPage/CartPage\";\r\nimport Page404 from \"../pages/page404/Page404\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                <Routes>\r\n                    <Route path='/favourite' element={<FavouritePage/>} />\r\n\r\n                    <Route path='/cart' element={<CartPage/>} />\r\n                        \r\n                    <Route path='/product/:productId' element={<SingleProductPage/>} />\r\n                        \r\n                    <Route path='/' element={<MainPage/>} />\r\n\r\n                    <Route path='*' element={<Page404/>}/>\r\n                </Routes>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport products from '../slices/productsSlice'\r\nimport cartProducts from '../slices/cartProductsSlice'\r\n\r\nconst store = configureStore({\r\n    reducer: {products, cartProducts},\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware(),\r\n    devTools: process.env.NODE_ENV !== 'production', \r\n})\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}